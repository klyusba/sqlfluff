# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 93b2aa260d4eaadc8abbd27608f9ac81f70c9ffd0a4349541ae2499e38f3b7b3
file:
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
      - identifier: s1
      - dot: .
      - identifier: t1
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                identifier: col1
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: col2
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: col3
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: testtable
        end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
      - identifier: s1
      - dot: .
      - identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - comma: ','
      - column_reference:
          identifier: col2
      - end_bracket: )
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
          - keyword: select
          - select_clause_element:
              column_reference:
                identifier: col1
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: col2
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: col3
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: testtable
        end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
      - identifier: schema1
      - dot: .
      - identifier: t1
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: col2
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: col3
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: testtable
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
      - identifier: schema1
      - dot: .
      - identifier: t1
    - keyword: DEFAULT
    - keyword: VALUES
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
      - identifier: s1
      - dot: .
      - identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - comma: ','
      - column_reference:
          identifier: col2
      - end_bracket: )
    - values_clause:
      - keyword: VALUES
      - bracketed:
        - start_bracket: (
        - literal: "'V1'"
        - comma: ','
        - literal: '1'
        - end_bracket: )
      - comma: ','
      - bracketed:
        - start_bracket: (
        - literal: "'V2'"
        - comma: ','
        - literal: '2'
        - end_bracket: )
- statement_terminator: ;
